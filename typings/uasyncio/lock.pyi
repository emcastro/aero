from collections.abc import Generator

from _typeshed import Incomplete

from . import core as core

class Lock:
    state: int
    waiting: Incomplete
    def __init__(self) -> None: ...
    def locked(self): ...
    def release(self) -> None: ...
    def acquire(self) -> Generator[None, None, Incomplete]: ...
    async def __aenter__(self): ...
    async def __aexit__(self, exc_type, exc, tb): ...
